parameters:
    - name: DeployEnv
      type: string
    - name: AzureDevopsEnvName
      type: string
    - name: DownloadFromPipeline
      type: string
      default: ''
    - name: DeployApiToken
      type: string
    - name: DeployUrl
      type: string
    - name: GithubAppPrivateKeyBase64
      type: string
    - name: SourceBranchForPreviewEnvironment
      type: string
      default: ''
    - name: DependsOn
      type: object
      default: []
    - name: CheckoutTemplate
      type: string
    - name: CreateGithubRelease
      type: boolean
      default: false

stages:
    - stage: deploy_to_${{ parameters.DeployEnv }}
      displayName: Deploy to ${{ parameters.AzureDevopsEnvName }}
      dependsOn: ${{ parameters.DependsOn }}
      jobs:
          - deployment: deploy_to_${{ parameters.DeployEnv }}
            displayName: Deploy to ${{ parameters.AzureDevopsEnvName }}
            environment: ${{ parameters.AzureDevopsEnvName }}
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - template: ${{ parameters.CheckoutTemplate }}

                            - ${{ if ne(parameters.SourceBranchForPreviewEnvironment, '') }}:
                                - script: echo "##vso[task.setvariable variable=DeployPreviewName]pr$(echo $SOURCE_BRANCH | grep -oP "refs/pull/\K[0-9]+")"
                                  env:
                                      SOURCE_BRANCH: ${{ parameters.SourceBranchForPreviewEnvironment }}
                                  displayName: Calculate deploy preview name

                            - ${{ if eq(parameters.SourceBranchForPreviewEnvironment, '') }}:
                                - script: echo "##vso[task.setvariable variable=DeployPreviewName]"
                                  displayName: Skip setting deploy preview name

                            - download: ${{ coalesce(parameters.DownloadFromPipeline, 'current') }}
                              artifact: build
                              displayName: Download artifact

                            - script: cp src/env/${{ parameters.DeployEnv }}-config.json $(Pipeline.Workspace)/${{ coalesce(parameters.DownloadFromPipeline, '.') }}/build/env-config.json
                              displayName: Setup env

                            - task: AzureStaticWebApp@0
                              inputs:
                                  cwd: $(Pipeline.Workspace)/${{ coalesce(parameters.DownloadFromPipeline, '.') }}
                                  skip_app_build: true
                                  app_location: build
                                  api_location: ''
                                  deployment_environment: $(DeployPreviewName)
                                  output_location: ''
                                  azure_static_web_apps_api_token: ${{ parameters.DeployApiToken }}
                              displayName: Deploy Azure Static Web App

                            - script: |
                                  ./azure-devops/github-cli/script.sh deployment \
                                      --privateKeyBase64 "$GITHUB_APP_PRIVATE_KEY_BASE64" \
                                      --environment "${DEPLOY_PREVIEW_NAME:-$ENVIRONMENT}" \
                                      --ref "$(git rev-parse HEAD)" \
                                      --deployedUrl "$DEPLOY_URL" \
                                      --previewEnvName "$DEPLOY_PREVIEW_NAME"
                              displayName: Create deployment in GitHub
                              env:
                                  ENVIRONMENT: ${{ parameters.DeployEnv }}
                                  DEPLOY_URL: ${{ parameters.DeployUrl }}
                                  DEPLOY_PREVIEW_NAME: $(DeployPreviewName)
                                  GITHUB_APP_PRIVATE_KEY_BASE64: ${{ parameters.GithubAppPrivateKeyBase64 }}

                            - ${{ if eq(parameters.CreateGithubRelease, true) }}:
                                - script: |
                                    ./azure-devops/github-cli/script.sh release \
                                        --privateKeyBase64 "$GITHUB_APP_PRIVATE_KEY_BASE64" \
                                        --ref "$(git rev-parse HEAD)"
                                  env:
                                      GITHUB_APP_PRIVATE_KEY_BASE64: $(GithubAppPrivateKeyBase64)
                                  displayName: Create GitHub release
