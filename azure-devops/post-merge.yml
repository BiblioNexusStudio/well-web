name: $(Build.SourceVersion)
appendCommitMessageToRunName: true

pr: none
trigger:
    - master

pool:
    vmImage: ubuntu-latest

variables:
    - group: dev-web
    - group: qa-web
    - group: github-app

stages:
    - stage: build
      displayName: Build
      dependsOn: []
      jobs:
          - job: build
            displayName: Build
            steps:
                - template: templates/checkout_master.yml
                - template: templates/install_deps.yml
                - template: templates/build_and_publish_artifact.yml

    - stage: cleanup_qa_preview
      displayName: Cleanup qa preview environment
      dependsOn: []
      jobs:
          - job: cleanup_qa_preview
            displayName: Cleanup qa preview environment
            steps:
                - template: templates/checkout_master.yml
                - template: templates/setup_node.yml
                - task: AzureCLI@2
                  inputs:
                      azureSubscription: dacfa945-984c-4708-9f2d-7d8358f223d5
                      scriptType: bash
                      scriptLocation: inlineScript
                      inlineScript: |
                          az staticwebapp environment delete \
                              --yes --name aquifer-web-qa \
                              --environment-name "pr$(echo $BUILD_SOURCEVERSIONMESSAGE | grep -oP '\(#\K\d+')"
                  displayName: Destroy preview environment in Azure
                - script: |
                      ./azure-devops/github-cli/script.sh deployment \
                          --privateKeyBase64 "$GITHUBAPPPRIVATEKEYBASE64" \
                          --environment "pr$(echo $BUILD_SOURCEVERSIONMESSAGE | grep -oP '\(#\K\d+')" \
                          --destroy
                  displayName: Destroy preview environment in GitHub

    - stage: deploy_to_dev
      displayName: Deploy to dev
      dependsOn: build
      jobs:
          - deployment: deploy_to_dev
            displayName: Deploy to dev
            environment: dev-web
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - template: templates/checkout_master.yml
                            - template: templates/deploy.yml
                              parameters:
                                DeployEnv: dev
                                DeployApiToken: $(AzureStaticWebAppsApiTokenDev)
                                DeployUrl: $(AzureStaticWebAppsDeployUrlDev)
                                GithubAppPrivateKeyBase64: $(GithubAppPrivateKeyBase64)

    - stage: deploy_to_qa
      displayName: Deploy to qa
      dependsOn: build
      jobs:
          - deployment: deploy_to_qa
            displayName: Deploy to qa
            environment: qa-web
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - template: templates/checkout_master.yml
                            - template: templates/deploy.yml
                              parameters:
                                DeployEnv: qa
                                DeployApiToken: $(AzureStaticWebAppsApiTokenQa)
                                DeployUrl: $(AzureStaticWebAppsDeployUrlQa)
                                GithubAppPrivateKeyBase64: $(GithubAppPrivateKeyBase64)

    - stage: deploy_to_prod
      displayName: Deploy to prod
      dependsOn: build
      jobs:
          - deployment: deploy_to_prod
            displayName: Deploy to prod
            environment: prod-web
            strategy:
                runOnce:
                    deploy:
                        steps:
                            - template: templates/checkout_master.yml
                            # - template: templates/deploy.yml
                            #   parameters:
                            #     DeployEnv: prod
                            #     DeployApiToken: $(AzureStaticWebAppsApiTokenProd)
                            #     DeployUrl: $(AzureStaticWebAppsDeployUrlProd)
                            #     GithubAppPrivateKeyBase64: $(GithubAppPrivateKeyBase64)
                            - script: |
                                ./azure-devops/github-cli/script.sh release \
                                    --privateKeyBase64 "$GITHUB_APP_PRIVATE_KEY_BASE64" \
                                    --ref "$(git rev-parse HEAD)"
                              env:
                                  GITHUB_APP_PRIVATE_KEY_BASE64: $(GithubAppPrivateKeyBase64)
                              displayName: Create GitHub release
